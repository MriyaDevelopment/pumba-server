{
    "openapi": "3.0.0",
    "info": {
        "title": "Pumba Api",
        "version": "1.0.2"
    },
    "servers": [
        {
            "url": "http://ovz5.j04713753.0n03n.vps.myjino.ru/public/api/",
            "description": "Pumba"
        }
    ],
    "paths": {
        "/sendAlert": {
            "post": {
                "tags": [
                    "AlertManager"
                ],
                "summary": "sendAlert",
                "description": "sendAlert by (Header - api_token), text",
                "operationId": "sendAlert",
                "requestBody": {
                    "description": "Бот воспринимает только text = английский",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "text"
                                ],
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "example": "Error"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Bot sent a message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "api_token": {
                                            "type": "string",
                                            "example": "OzQ50ke3GElJMNvBZm8uksngp8dqNVYAHqr5CGHN9visYI0TYHg1fFdhsNf8BqTpwqDwXqcPhcxzN3Pj"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/loginOrRegisterViaSocialNetworks": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "loginOrRegisterViaSocialNetworks",
                "description": "LoginOrRegisterViaSocialNetworks by email, name, api_token",
                "operationId": "LoginOrRegisterViaSocialNetworks",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "name",
                                    "api_token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@example.com"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "example"
                                    },
                                    "api_token": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "1sllsdlsdklskldlkslksdlkdklskl"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "api_token": {
                                            "type": "string",
                                            "example": "OzQ50ke3GElJMNvBZm8uksngp8dqNVYAHqr5CGHN9visYI0TYHg1fFdhsNf8BqTpwqDwXqcPhcxzN3Pj"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "description": "Register by name, email, password",
                "operationId": "authRegister",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@example.com"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "name",
                                        "example": "example"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Name Or Email has already been taken",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "api_token": {
                                            "type": "string",
                                            "example": "OzQ50ke3GElJMNvBZm8uksngp8dqNVYAHqr5CGHN9visYI0TYHg1fFdhsNf8BqTpwqDwXqcPhcxzN3Pj"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/changePassword": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "ChangePassword",
                "description": "ChangePassword by email, password",
                "operationId": "changePassword",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Mail does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Mail does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "api_token": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/changeEmail": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "ChangeEmail",
                "description": "ChangeEmail by new_email, old_email",
                "operationId": "ChangeEmail",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "new_email",
                                    "old_email"
                                ],
                                "properties": {
                                    "new_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example@example.com"
                                    },
                                    "old_email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "example123@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "Mail does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Mail does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "api_token": {
                                            "type": "string",
                                            "example": "Mail changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getChildren": {
            "post": {
                "tags": [
                    "Child"
                ],
                "summary": "Children",
                "description": "Children by api_token",
                "operationId": "children",
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "children": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": 0
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "avatar": {
                                                        "type": "string",
                                                        "example": null
                                                    },
                                                    "birth": {
                                                        "type": "string",
                                                        "example": "2022-09-02"
                                                    },
                                                    "api_token": {
                                                        "type": "string"
                                                    },
                                                    "gender": {
                                                        "type": "string",
                                                        "example": "Enum(Boy, Girl, Neutral)"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/editChild": {
            "post": {
                "tags": [
                    "Child"
                ],
                "summary": "editChild",
                "description": "editChild by name, avatar, id, gender, birth",
                "operationId": "editChild",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "id",
                                    "gender",
                                    "birth"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": 0
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Example"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Enum(Boy, Girl, Neutral)"
                                    },
                                    "birth": {
                                        "type": "string",
                                        "example": "2022-09-08"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "1669926220.png or Base64 or Null(удали поле опционально null/nil)"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Child does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Child edited successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/deleteChild": {
            "post": {
                "tags": [
                    "Child"
                ],
                "summary": "deleteChild",
                "description": "deleteChild by id",
                "operationId": "deleteChild",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Child does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Child deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/addChild": {
            "post": {
                "tags": [
                    "Child"
                ],
                "summary": "addChild",
                "description": "addChild by name, avatar, gender, birth",
                "operationId": "addChild",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "gender",
                                    "birth"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Example"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Enum(Boy, Girl, Neutral)"
                                    },
                                    "birth": {
                                        "type": "string",
                                        "example": "2022-09-08"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "Base64 or Null(удали поле опционально null/nil)"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Child added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/updateFcmToken": {
            "post": {
                "tags": [
                    "FCM"
                ],
                "summary": "updateFcmToken",
                "description": "updateFcmToken by api_token, fcm_token",
                "operationId": "updateFcmToken",
                "requestBody": {
                    "description": "fcm",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fcm_token"
                                ],
                                "properties": {
                                    "fcm_token": {
                                        "type": "string",
                                        "example": "OzQ50ke3GElJMNvBZm8uksngp8dqNVYAHqr5CGHN9visYI0TYHg1fFdhsNf8BqTpwqDwXqcPhcxzN3Pj"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "fcm_token updated success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/sendTestFCMMessage": {
            "post": {
                "tags": [
                    "FCM"
                ],
                "summary": "sendTestFCMMessage",
                "description": "sendTestFCMMessage by body, text",
                "operationId": "sendTestFCMMessage",
                "requestBody": {
                    "description": "fcm",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "body",
                                    "title"
                                ],
                                "properties": {
                                    "body": {
                                        "type": "string",
                                        "example": "Test"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Test"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Testing Notification Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/getGames": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Games",
                "description": "Games by api_token",
                "operationId": "games",
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "games": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "game": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "title": {
                                                                "type": "string"
                                                            },
                                                            "subtitle": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "time": {
                                                                "type": "string"
                                                            },
                                                            "image": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "inventory": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "image": {
                                                                            "type": "string"
                                                                        },
                                                                        "gameId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "isSaved": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/getGameById": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "getGameById",
                "description": "Games by api_token, id",
                "operationId": "getGameById",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "game": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "time": {
                                                    "type": "string"
                                                },
                                                "energy_level": {
                                                    "type": "string"
                                                },
                                                "stuff": {
                                                    "type": "string"
                                                },
                                                "ages": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "inventory": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "image": {
                                                                "type": "string"
                                                            },
                                                            "gameId": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "isSaved": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/saveGame": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Saved Games",
                "description": "Saved Games by api_token, gameId",
                "operationId": "saved games",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "gameId"
                                ],
                                "properties": {
                                    "gameId": {
                                        "type": "string",
                                        "example": "123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "saveInfo": {
                                            "type": "object",
                                            "example": {
                                                "isSaved": false,
                                                "gameId": "22"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/getSavedGames": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "getSavedGames",
                "description": "getSavedGames by api_token",
                "operationId": "getSavedGames",
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "games": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "game": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "title": {
                                                                "type": "string"
                                                            },
                                                            "subtitle": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "time": {
                                                                "type": "string"
                                                            },
                                                            "image": {
                                                                "type": "string"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "inventory": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "image": {
                                                                            "type": "string"
                                                                        },
                                                                        "gameId": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "isSaved": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/getSubCategoryGuides": {
            "post": {
                "tags": [
                    "Guide"
                ],
                "summary": "Guides",
                "description": "Guides by category",
                "operationId": "guide",
                "requestBody": {
                    "description": "Enum(Health, RelationShip, Sleep, Hygiene, Feeding, Learning) -> String",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category"
                                ],
                                "properties": {
                                    "category": {
                                        "type": "string",
                                        "example": "Sleep"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Guide does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "guides": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "0"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sendLetter": {
            "post": {
                "tags": [
                    "Mailer"
                ],
                "summary": "sendLetter",
                "description": "sendLetter by email",
                "operationId": "sendLetter",
                "requestBody": {
                    "description": "Mailer",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "sergei.pokhodai@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "All fields are mandatory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Verification code sent to sergei.pokhodai@gmail.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/checkCode": {
            "post": {
                "tags": [
                    "Mailer"
                ],
                "summary": "checkCode",
                "description": "check by code",
                "operationId": "checkCode",
                "requestBody": {
                    "description": "Code",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "All fields are mandatory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Code is correct"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addMemory": {
            "post": {
                "tags": [
                    "Memories"
                ],
                "summary": "addMemory",
                "description": "addMemory by api_token, childId, image, note, name, color",
                "operationId": "addMemory",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "note",
                                    "image",
                                    "childId",
                                    "color"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Example"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "Base64 or Null(удали поле опционально null/nil)"
                                    },
                                    "childId": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Memory added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/getMemories": {
            "post": {
                "tags": [
                    "Memories"
                ],
                "summary": "Memories",
                "description": "Memories by api_token, childId",
                "operationId": "memories",
                "requestBody": {
                    "description": "child id",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "childId"
                                ],
                                "properties": {
                                    "childId": {
                                        "type": "string",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "memories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "note": {
                                                        "type": "string"
                                                    },
                                                    "color": {
                                                        "type": "string"
                                                    },
                                                    "image": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/deleteMemory": {
            "post": {
                "tags": [
                    "Memories"
                ],
                "summary": "deleteMemory",
                "description": "deleteMemory by api_token, id",
                "operationId": "deleteMemory",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Memory does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Memory deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/editMemory": {
            "post": {
                "tags": [
                    "Memories"
                ],
                "summary": "editMemory",
                "description": "editMemory by id, image, note, name, color",
                "operationId": "editMemory",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "note",
                                    "image",
                                    "color"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Example"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "Base64 or Null(удали поле опционально null/nil)"
                                    },
                                    "id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Memory eddited successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/getProfile": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Profile",
                "description": "Profile by api_token",
                "operationId": "profile",
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Profile does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "profile": {
                                            "type": "object",
                                            "example": {
                                                "name": "ExampleName",
                                                "email": "example@example.com",
                                                "fcm_token": null,
                                                "api_token": "string",
                                                "avatar": "1669926220.png",
                                                "role": "Enum(Mother, Father, Other)"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/editProfile": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "editProfile",
                "description": "editProfile by api_token, name, avatar, role",
                "operationId": "editProfile",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Example"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "Enum(Mother, Father, Other)"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "example": "1669926220.png or Base64 or Null(удали поле опционально null/nil)"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "The name has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Profile edited successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/deleteProfile": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "deleteProfile",
                "description": "deleteProfile by api_token",
                "operationId": "deleteProfile",
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Profile does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "User account deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/setResultQuiz": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "setResultQuiz",
                "description": "setResultQuiz by ages, energy_level, door_type, stuff, time",
                "operationId": "setResultQuiz",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ages",
                                    "energy_level",
                                    "door_type",
                                    "stuff",
                                    "time"
                                ],
                                "properties": {
                                    "ages": {
                                        "type": "string",
                                        "example": "0-1,2-4"
                                    },
                                    "energy_level": {
                                        "type": "string",
                                        "example": "High"
                                    },
                                    "door_type": {
                                        "type": "string",
                                        "example": "Indoor / door"
                                    },
                                    "stuff": {
                                        "type": "string",
                                        "example": "Needed / Not needed"
                                    },
                                    "time": {
                                        "type": "string",
                                        "example": "10-15,15-30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Filters added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/getReminders": {
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Reminder",
                "description": "Reminders by api_token",
                "operationId": "reminder",
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "reminders": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": 0
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "time": {
                                                        "type": "string",
                                                        "example": "HH:mm"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "example": "Enum(Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday) -> String or format(yyyy-MM-dd) -> String"
                                                    },
                                                    "repeat": {
                                                        "type": "boolean",
                                                        "example": "false"
                                                    },
                                                    "color": {
                                                        "type": "string",
                                                        "example": "Enum(Orange, Blue, LightBlue, Green, Purple, Yellow, Pink) -> String"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "Enum(Custom, Template) ->String"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "example": "Enum(On, Off) -> String ->String"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/addReminder": {
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "addReminder",
                "description": "addReminder by api_token, name, note, time, date, repeat, color, type",
                "operationId": "addReminder",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "note",
                                    "time",
                                    "date",
                                    "repeat",
                                    "color",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Example"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "time": {
                                        "type": "string",
                                        "example": "HH:mm"
                                    },
                                    "date": {
                                        "type": "string",
                                        "example": "Enum(Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday) -> String or format(yyyy-MM-dd) -> String"
                                    },
                                    "repeat": {
                                        "type": "string",
                                        "example": "1 == true or 0 == false -> Отправляем строкой!"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Enum(Orange, Blue, LightBlue, Green, Purple, Yellow, Pink, NotColor) -> String"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Enum(Custom, Template) ->String"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Reminder added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/deleteReminder": {
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "deleteReminder",
                "description": "deleteReminder by api_token, id",
                "operationId": "deleteReminder",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Reminder delete successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/editReminder": {
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "editReminder",
                "description": "editReminder by id, api_token, name, note, time, date, repeat, color, type",
                "operationId": "editReminder",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "note",
                                    "time",
                                    "date",
                                    "repeat",
                                    "color",
                                    "type"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": 0
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Example"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "time": {
                                        "type": "string",
                                        "example": "HH:mm"
                                    },
                                    "date": {
                                        "type": "string",
                                        "example": "Enum(Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday) -> String or format(yyyy-MM-dd) -> String"
                                    },
                                    "repeat": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Enum(Orange, Blue, LightBlue, Green, Purple, Yellow, Pink) -> String"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Enum(Custom, Template) ->String"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "success": {
                                            "type": "string",
                                            "example": "Reminder edited successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/getDropedTeeth": {
            "post": {
                "tags": [
                    "Teeth"
                ],
                "summary": "Teeth",
                "description": "Teeth by api_token, childId",
                "operationId": "teeth",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "childId"
                                ],
                                "properties": {
                                    "childId": {
                                        "type": "string",
                                        "example": "19"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "teeth": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "tooth": {
                                                        "type": "object",
                                                        "example": {
                                                            "toothId": "22",
                                                            "childId": "55",
                                                            "id": "49"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/setDropedTooth": {
            "post": {
                "tags": [
                    "Teeth"
                ],
                "summary": "setDropedTooth",
                "description": "setDropedTooth by api_token, childId, toothId",
                "operationId": "tooth",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "childId",
                                    "toothId"
                                ],
                                "properties": {
                                    "childId": {
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "toothId": {
                                        "type": "string",
                                        "example": "12"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "toothInfo": {
                                            "properties": {
                                                "toothId": {
                                                    "type": "string",
                                                    "example": "12"
                                                },
                                                "isDroped": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Authorization": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}